AWSTemplateFormatVersion: '2010-09-09'
Description: 'MCM IAM roles for ACK controllers with EKS Pod Identity trust policies'

Parameters:
  RoleNamePrefix:
    Type: String
    Default: 'MCM'
    Description: 'Prefix for IAM role names'

Resources:
  # IAM Role for ACK IAM Controller
  ACKIAMControllerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${RoleNamePrefix}ACKIAMControllerRole'
      Description: 'IAM role for ACK IAM controller with EKS Pod Identity'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: pods.eks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'
      Policies:
        - PolicyName: 'ACKIAMControllerPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: 'IAMManagementPermissions'
                Effect: Allow
                Action:
                  - 'iam:GetGroup'
                  - 'iam:CreateGroup'
                  - 'iam:DeleteGroup'
                  - 'iam:UpdateGroup'
                  - 'iam:GetRole'
                  - 'iam:CreateRole'
                  - 'iam:DeleteRole'
                  - 'iam:UpdateRole'
                  - 'iam:PutRolePermissionsBoundary'
                  - 'iam:PutUserPermissionsBoundary'
                  - 'iam:GetUser'
                  - 'iam:CreateUser'
                  - 'iam:DeleteUser'
                  - 'iam:UpdateUser'
                  - 'iam:GetPolicy'
                  - 'iam:CreatePolicy'
                  - 'iam:DeletePolicy'
                  - 'iam:GetPolicyVersion'
                  - 'iam:CreatePolicyVersion'
                  - 'iam:DeletePolicyVersion'
                  - 'iam:ListPolicyVersions'
                  - 'iam:ListPolicyTags'
                  - 'iam:ListAttachedGroupPolicies'
                  - 'iam:GetGroupPolicy'
                  - 'iam:PutGroupPolicy'
                  - 'iam:AttachGroupPolicy'
                  - 'iam:DetachGroupPolicy'
                  - 'iam:DeleteGroupPolicy'
                  - 'iam:ListAttachedRolePolicies'
                  - 'iam:ListRolePolicies'
                  - 'iam:GetRolePolicy'
                  - 'iam:PutRolePolicy'
                  - 'iam:AttachRolePolicy'
                  - 'iam:DetachRolePolicy'
                  - 'iam:DeleteRolePolicy'
                  - 'iam:ListAttachedUserPolicies'
                  - 'iam:ListUserPolicies'
                  - 'iam:GetUserPolicy'
                  - 'iam:PutUserPolicy'
                  - 'iam:AttachUserPolicy'
                  - 'iam:DetachUserPolicy'
                  - 'iam:DeleteUserPolicy'
                  - 'iam:ListRoleTags'
                  - 'iam:ListUserTags'
                  - 'iam:TagPolicy'
                  - 'iam:UntagPolicy'
                  - 'iam:TagRole'
                  - 'iam:UntagRole'
                  - 'iam:TagUser'
                  - 'iam:UntagUser'
                  - 'iam:RemoveClientIDFromOpenIDConnectProvider'
                  - 'iam:ListOpenIDConnectProviderTags'
                  - 'iam:UpdateOpenIDConnectProviderThumbprint'
                  - 'iam:UntagOpenIDConnectProvider'
                  - 'iam:AddClientIDToOpenIDConnectProvider'
                  - 'iam:DeleteOpenIDConnectProvider'
                  - 'iam:GetOpenIDConnectProvider'
                  - 'iam:TagOpenIDConnectProvider'
                  - 'iam:CreateOpenIDConnectProvider'
                  - 'iam:UpdateAssumeRolePolicy'
                Resource: '*'
      Tags:
        - Key: 'ManagedBy'
          Value: 'CloudFormation'
        - Key: 'Purpose'
          Value: 'ACK-Controllers'

  # IAM Role for ACK EKS Controller
  ACKEKSControllerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${RoleNamePrefix}ACKEKSControllerRole'
      Description: 'IAM role for ACK EKS controller with EKS Pod Identity'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: pods.eks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonEKSClusterPolicy'
      Policies:
        - PolicyName: 'ACKEKSControllerPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: 'EKSManagementPermissions'
                Effect: Allow
                Action:
                  - 'eks:*'
                  - 'iam:PassRole'
                  - 'iam:ListAttachedRolePolicies'
                  - 'iam:GetRole'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeVpcs'
                Resource: '*'
      Tags:
        - Key: 'ManagedBy'
          Value: 'CloudFormation'
        - Key: 'Purpose'
          Value: 'ACK-Controllers'

  # IAM Role for Fleet Bootstrap Operations
  FleetBootstrapRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${RoleNamePrefix}ACKFleetBootstrapRole'
      Description: 'IAM role for Fleet bootstrap operations - creates pod identity associations'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: pods.eks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
              - 'sts:TagSession'
      Policies:
        - PolicyName: 'FleetBootstrapPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: 'PodIdentityAssociationManagement'
                Effect: Allow
                Action:
                  - 'eks:CreatePodIdentityAssociation'
                  - 'eks:DeletePodIdentityAssociation'
                  - 'eks:DescribePodIdentityAssociation'
                  - 'eks:ListPodIdentityAssociations'
                  - 'eks:UpdatePodIdentityAssociation'
                  - 'eks:DescribeCluster'
                Resource: '*'
              - Sid: 'IAMReadPermissions'
                Effect: Allow
                Action:
                  - 'iam:GetRole'
                  - 'iam:ListAttachedRolePolicies'
                Resource: '*'
              - Sid: 'PassRoleForPodIdentity'
                Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource:
                  - !GetAtt ACKIAMControllerRole.Arn
                  - !GetAtt ACKEKSControllerRole.Arn
      Tags:
        - Key: 'ManagedBy'
          Value: 'CloudFormation'
        - Key: 'Purpose'
          Value: 'Fleet-Bootstrap'

Outputs:
  ACKIAMControllerRoleArn:
    Description: 'ARN of the IAM role for ACK IAM Controller'
    Value: !GetAtt ACKIAMControllerRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-IAMControllerRoleArn'

  ACKEKSControllerRoleArn:
    Description: 'ARN of the IAM role for ACK EKS Controller'
    Value: !GetAtt ACKEKSControllerRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-EKSControllerRoleArn'

  FleetBootstrapRoleArn:
    Description: 'ARN of the IAM role for Fleet Bootstrap operations'
    Value: !GetAtt FleetBootstrapRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-FleetBootstrapRoleArn'

  BootstrapCommand:
    Description: 'Command to run for each cluster to create bootstrap pod identity association'
    Value: !Sub |
      aws eks create-pod-identity-association \
        --cluster-name <CLUSTER_NAME> \
        --namespace fleet-system \
        --service-account fleet-bootstrap \
        --role-arn ${FleetBootstrapRole.Arn}
